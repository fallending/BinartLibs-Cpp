Checks: '
  -*,
  bugprone-*,
  cert-,
  clang-analyzer-,
  cppcoreguidelines-*,
  cppcoreguidelines-init-variables-,
  -cppcoreguidelines-pro-type-member-init,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-vararg,
  -cppcoreguidelines-special-member-functions,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  llvm-,
  -llvm-include-order,
  google-build-using-namespace,
  google-explicit-constructor,
  google-global-names-in-headers,
  google-readability-casting,
  google-runtime-int,
  google-runtime-operator,
  hicpp-*,
  -hicpp-vararg,
  -hicpp-special-member-functions,
  -hicpp-no-array-decay,
  misc-*,
  -misc-unused-parameters,
  modernize-*,
  -modernize-use-trailing-return-type,
  -modernize-concat-nested-namespaces,
  performance-*,
  readability-*,
  -readability-named-parameter,
  -surelogic-readability-using'

# 有需要变更的化，可以在这里查询：https://clang.llvm.org/extra/clang-tidy/checks/list.html
CheckOptions:
  - { key: bugprone-argument-comment.StrictMode,                                                              value: 1 }
  - { key: bugprone-exception-escape.FunctionsThatShouldNotThrow,                                             value: 'WinMain,SDL_main' }


  # ( int i = 0; ) -> ( int i{}; )
  # - { key: cppcoreguidelines-pro-type-member-init,                                                            value: 0 }
  - { key: cppcoreguidelines-prefer-member-initializer,                                                       value: 0 }
  - { key: modernize-use-default-member-init,                                                                 value: 0 }
  - { key: readability-redundant-member-init,                                                                 value: 0 }
  - { key: cppcoreguidelines-init-variables,                                                                  value: 0 }

  # Allows to completely ignore classes if all the member variables in that class have public visibility.
  - { key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic,       value: 1 }

  # Allows to ignore (not diagnose) all the member variables with public visibility scope.
  - { key: misc-non-private-member-variables-in-classes.IgnorePublicMemberVariables,                          value: 0 }
  - { key: hicpp-special-member-functions.AllowSoleDefaultDtor,                                               value: 1 }

  # https://clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html
  - { key: readability-identifier-naming.ClassCase,                                                           value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,                                                        value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,                                                        value: CamelCase }
  # 类成员后缀
  - { key: readability-identifier-naming.ClassMemberSuffix,                                                   value: _         }
  # 私有成员前缀
  # - { key: readability-identifier-naming.PrivateMemberPrefix,                                                 value: _         }
  # 私有成员后缀
  - { key: readability-identifier-naming.PrivateMemberSuffix,                                                 value: _         }
  - { key: readability-identifier-naming.ParameterCase,                                                       value: lower_case }

WarningsAsErrors:    ''
HeaderFilterRegex:   ''
FormatStyle:         google
  